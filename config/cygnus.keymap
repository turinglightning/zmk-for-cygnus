/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 2>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q                          &kp W             &kp E                &kp R             &kp T         &kp Y                     &kp U              &kp I               &kp O           &kp  P
&hm LCTRL A                    &kp  S            &kp D                &kp  F            &kp G         &kp H                     &kp  J             &kp  K              &kp  L          &hm RCTRL FSLH
&kp Z                          &kp X             &kp C                &kp V             &kp B         &kp N                     &kp M              &kp COMMA           &kp DOT         &hm RSHFT SEMI
                                   &kp BACKSPACE      &kp ENTER    &ltq 1 CAPS                 &ltq 2  EQUAL      &kp MINUS    &kp SPACE
            >;
        };

        layer_1{
            bindings = <
&kp N1                &kp N2            &kp N3            &kp N4         &kp N5           &kp N6            &kp N7        &kp N8        &kp N9        &kp N0
&kp C_BRI_UP            &trans          &kp HOME          &kp PG_UP      &kp GRAVE        &kp LBKT          &trans        &kp UP       &trans         &kp BSLH
&kp C_BRI_DN          &kp LGUI          &kp END           &kp PG_DN      &kp SQT          &kp RBKT          &kp LEFT        &kp DOWN        &kp RIGHT        &kp RSHFT
            &trans                &trans            &trans             &trans             &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&bt BT_SEL 0          &bt BT_SEL 1    &bt BT_SEL 2    &trans      &trans          &kp ESC         &trans      &trans       &trans      &trans
&bt BT_CLR            &trans          &trans          &trans      &trans          &trans         &kp F2     &kp F9       &kp F12      &trans
&out OUT_TOG          &trans          &trans          &trans      &trans          &trans         &trans      &trans       &trans      &trans
                 &trans                &trans            &trans                      &trans       &trans     &trans
            >;
        };
    };
};
